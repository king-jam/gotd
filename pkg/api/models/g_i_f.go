// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// GIF g i f
// swagger:model GIF
type GIF struct {
	ObjectMeta

	// deactivated at
	// Format: date-time
	DeactivatedAt *strfmt.DateTime `json:"deactivatedAt,omitempty"`

	// request src
	RequestSrc string `json:"requestSrc,omitempty"`

	// requester ID
	RequesterID string `json:"requesterID,omitempty"`

	// url
	URL string `json:"url,omitempty"`
}

// UnmarshalJSON unmarshals this object from a JSON structure
func (m *GIF) UnmarshalJSON(raw []byte) error {
	// AO0
	var aO0 ObjectMeta
	if err := swag.ReadJSON(raw, &aO0); err != nil {
		return err
	}
	m.ObjectMeta = aO0

	// AO1
	var dataAO1 struct {
		DeactivatedAt *strfmt.DateTime `json:"deactivatedAt,omitempty"`

		RequestSrc string `json:"requestSrc,omitempty"`

		RequesterID string `json:"requesterID,omitempty"`

		URL string `json:"url,omitempty"`
	}
	if err := swag.ReadJSON(raw, &dataAO1); err != nil {
		return err
	}

	m.DeactivatedAt = dataAO1.DeactivatedAt

	m.RequestSrc = dataAO1.RequestSrc

	m.RequesterID = dataAO1.RequesterID

	m.URL = dataAO1.URL

	return nil
}

// MarshalJSON marshals this object to a JSON structure
func (m GIF) MarshalJSON() ([]byte, error) {
	_parts := make([][]byte, 0, 2)

	aO0, err := swag.WriteJSON(m.ObjectMeta)
	if err != nil {
		return nil, err
	}
	_parts = append(_parts, aO0)

	var dataAO1 struct {
		DeactivatedAt *strfmt.DateTime `json:"deactivatedAt,omitempty"`

		RequestSrc string `json:"requestSrc,omitempty"`

		RequesterID string `json:"requesterID,omitempty"`

		URL string `json:"url,omitempty"`
	}

	dataAO1.DeactivatedAt = m.DeactivatedAt

	dataAO1.RequestSrc = m.RequestSrc

	dataAO1.RequesterID = m.RequesterID

	dataAO1.URL = m.URL

	jsonDataAO1, errAO1 := swag.WriteJSON(dataAO1)
	if errAO1 != nil {
		return nil, errAO1
	}
	_parts = append(_parts, jsonDataAO1)

	return swag.ConcatJSON(_parts...), nil
}

// Validate validates this g i f
func (m *GIF) Validate(formats strfmt.Registry) error {
	var res []error

	// validation for a type composition with ObjectMeta
	if err := m.ObjectMeta.Validate(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateDeactivatedAt(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *GIF) validateDeactivatedAt(formats strfmt.Registry) error {

	if swag.IsZero(m.DeactivatedAt) { // not required
		return nil
	}

	if err := validate.FormatOf("deactivatedAt", "body", "date-time", m.DeactivatedAt.String(), formats); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *GIF) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *GIF) UnmarshalBinary(b []byte) error {
	var res GIF
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
